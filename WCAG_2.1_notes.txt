what is WCAG 2.1?
WCAG stands for Web Content accessibility Guidelines and aims to accomidate people with disabilities and make things easier for them to navigate, use, see, or hear. 2.1 is the latest version of these guidelines.


User Agent
a user agent is any software that a person uses to access web content.
they can be command driven or GUI-based.
usually a user agent or UA is referring to a web browser.
screen readers are not a UA. They work seperately, on top of a web browser or any other software on your device.

Assistive Technologies!
These are really wonderful things. Assistive technologies are what make the web  to people with disabilities, but It's our responsability as developers to make sure our content is as optimized as possible for these technologies. 
    Examples include:
    Screen magnifiers
    **  Refreshable Braille Display
        these are common at public kiosks. They raise and lower pins in the proper sequence to convert text to braille
    Screen readers
    Voice browsers -- similar to screen reader but only for web content.

Alternative input devices
which are for people who may not be able to use a keyboard or mouse.
    Head pointers
    Motion tracking or eye tracking
    "Switches" or single switch entry devices
    Large print or tactile keyboards
    Speech input software


Adaptive Strategies
these are options people may toggle to assist them or improve their interaction with web content. 
    Examples include:
    increasing text size
    enabling high contrast
    reducting mouse speed/sensitivity
    enabling closed captions
    **  Reduced interface
        a reduced interface may show an outline of a web page, showing only the most relevant information or by hiding less relevaant or unnecessary content. 

Presentation
    sometimes people with dyslexia may use text to speech to assist reading. Highlighting text while it's being read aloud may also be very beneficial

some people may use browser plugins that pause, hide, or stop automatic things like animations, pop-up windows, and redirection. Basically anything that could overwhealm the user.

glossarys explaining complex words and phrases can be super helpful not only to people who may have difficulties reading or writing, but also to people viewing content that is not in their native language.

Volume control seperate to the overall system volume can be very convenient not only for people with poor hearing but also for people using screen readers. 

Sounds that automatically play can really hinder the user experience when using a screen reader bbecause they can play over the screenreader, making it difficult or even impossible to navigate the page.

Visual orientation cues
using things like different background colors for specific sections of a web page help users differentiate the different parts of content which can be really helpful for people with certain disabilities.
    Also ensuring that titles, headings, and relevant information is in a prominent area will assist users with navigation and orientation.

Supplemental illustrations
these can go a long way when used in the right context to help people with low literacy or empairments. something as simple as using an emoji can get the point across to someone with low or even no literacy 
(in a certain language or overall)   

clear and consistent design
navigation and links should clearly and concisely convey their destination and purpose.
sections of information should be clearly or visibly seperated into appropriate groups.


multimedia alternative text
alternative text for multimedia and other non text objects should always be specified and describe the original content.
there are many reasons as to why or where an alternate text may come into play. Ultimately, its important for all non-text objects.


content should be organized in a manner so that it can be navigated and understood without the use of stylesheets. Older technology or low/poor bandwidth connections may not be able to handle style sheets.

the most underserved disabilities in this area, or the ones talked about the least are the inbetweens such as low vision or hard of hearing,     
physical/motor-control: slow motion, no mouse, alternative input devices
as well as 
cognitive or neurological: learning impairment, age related issues, difficulty understanding content or confusion 

 
 dont use tables for design layout. they're for tabular data only

 do maybe ... use empty alt tag for decorative images to not overwhealm the experience for a screenreader user

 do use fluid or autoscaling css units (for everything preferably).
        not only for responsiveness, but for text enlargement settings

do use tab index to make things accessible to keyboard only users.

do design content in one column for accessibility and responsiveness as well as ease of navigation and orientation.

dont align lots of text to the center.
do center left aligned text.

do use clear language. Avoid abbreviations, dashes, and slang words.

Dont use Read More or Click Here! for link text.
do use descriptive link text.


******************************* FORMS ******************************

  Other than basic info
  Before beginning the process, users should be made aware of any information they may need other than the basics like name, birth date, and contact info.

  508-- saving progress
  I'm pretty sure its a 508 requirement to let users save their progress on a form. Otherwise, it may pose a problem for those who have difficulty concentrating or rembering, or even for those who are multitasking or only have a short window of time to work on it.

  Order
  Form fields need to be in a logical order for people who are keyboard only users or for those who use a screen reader. Use tab key to test how keyboard only and screen reader users will navigate through the form.

  Visual cues
    Active input fields should be highlighted so people can clearly see where they are. 
  Form validation should also have visual cues as well as audible cues for screen readers. So that users know when there is an error that needs to be fixed.
    
  Labels
  Labels should be short but as descriptive as possible.
  Use the word (Required) as opposed to a star.
     Labels must also be properly associated with their corrosponding field so that screen reader users know. The WCAG uses the term "Programmatically" here. Meaning the association of the label with it's input field needs to be made using code. 
     Example: 
            the for attribute of the label needs to match the id of the corrosponding input field.

     <label for="firstName">First Name</label>
        <input type="text" id="firstName" name="firstName">


  Input Requirements
  If an input field has certain requirements that need to be met, those requirements should be clearly visible before filling out said field. You should also use color as a visual cue. 
  You could/should also use the aria-required="true" tag.


  Phone numbers 
  they should not be required. Someone who is deaf, may not use a phone. If a phone number will be a part of a form, you should have a section about how the user would prefer to be contacted.

  Form validation
  Form validation needs to not only have visual cues to let someone know whats wrong, but also needs to say specifically what is required for a valid input value.



  ******************************* ARIA ******************************

    ARIA is for giving semantics to elements. Most helpful for HTML <div> and <span> elements, as these are the only two out of over 100 that have no semantic meaning.

    role=""  and  aria-label=""
    there are many roles and labels that one could apply to any html element out there. sometimes redundancy is a good thing. so doing something like adding role="main" to a <main> tag can be helpful for anybody using an old browser that doesnt support the main tag.


